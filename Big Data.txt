--------
BIG DATA
--------

Data: Any type of information is referred to as data.

Data is of three types:
	1.Structured 		Eg.: Excel
	2.Semi-Structured	Eg.: JSON, XML
	3.Unstructured		Eg.: PPT

Big Data: Too much data Eg.: Instragram, Black Box etc.

Big Data Tools: Apache Hadoop, Spark, Kafka

Five Vs of Big Data:
	1.Velocity: Speed at which data travels.
	2.Volume: (1Mb/s) X amt of data travels to Y server.
	3.Value: Data should have some value for the organisation/industry, should be useful.
	4.Versity: Inconsistency, data loss during transfer, due to transfer limitations.
	5.Variety: Variety of data. Eg: insta-image,video,text

Big Data Analytics(making out useful inferences, decrypting):
	1.Collect
	2.Sort(Eg. branch wise sorting)
	3.Making out Inferences

	Uses: Ad customisation, User stats.



Hadoop Architecture:
	1.Map Reduce: Based on YARN, Distributed nature and Parallel processing. Map -> Reduce
	2.HDFS: Hadoop Distributed File System, divison of files into multiple parts(based on GFS), make replicas.
	3.YARN Framework: Yet Another Resource Negotiator, job scheduling(priority, dependency etc.) and resource management provide manage and maintain resources
	4.Common Utilities: Java libraries(files and scripts) required by other hadoop modules to work

kandane's algorithm

1. Map reduce: YARN Based.
	a) Map(): takes a set of data and breaks it into tuples(key-value pairs) and sends these as input to reduce module.
	b) Reduce(): combines the touples on the baisis of key and forms a set of tuples.
	c) Master job tracker: resource management among slaves, task scheduling, monitoring the task.
	d) Slave task tracker: execute the task, provide task status


|I|--->map()----->
|N|		  |reduce()|		|O|
|P|--->map()----->	    ----->()--->|/|
|U|		  |reduce()|		|P|
|T|--->map()----->


2.HDFS: Hadoop Distributed File System, the complete file is divided into blocks(64MB).
	a) Name node(Master Node): Stores and manages metadata(data about data), data nodes. Maps blocks to data nodes. Instructs block replication deletion based on priority.
	b) Data nodes: Actual data is stored in data nodes.